{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "TimeRange",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": true
            },
            "label": "Time Range"
          },
          {
            "id": "Machine",
            "version": "KqlParameterItem/1.0",
            "name": "Machine",
            "label": "Enter Server Name",
            "type": 1,
            "isRequired": true,
            "value": "*"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "filters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MachineFilter = iff('{Machine}' == '*' or isempty('{Machine}'), '', '{Machine}');\nuberAgent_Application_UIDelay_CL\n| where isempty(MachineFilter) or Computer has MachineFilter\n| summarize SumUIDelayMs = sum(UIDelayMs_d), AvgUIDelayMs = avg(UIDelayMs_d), CountUIDelay = count()\n| extend SumUIDelayS = round(SumUIDelayMs / 1000.0, 1), AvgUIDelayS = round(AvgUIDelayMs / 1000.0, 1)\n| project SumUIDelayS, AvgUIDelayS, CountUIDelay",
        "size": 4,
        "title": "Total, Average, and Count of UI Delays",
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "table"
      },
      "name": "UIDelayStats"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MachineFilter = iff('{Machine}' == '*' or isempty('{Machine}'), '', '{Machine}');\nuberAgent_Application_UIDelay_CL\n| where isempty(MachineFilter) or Computer has MachineFilter\n| summarize SumUIDelayMs = sum(UIDelayMs_d) by Computer\n| extend SumUIDelayS = round(SumUIDelayMs / 1000.0, 1)\n| top 10 by SumUIDelayS desc",
        "size": 0,
        "title": "UI Delay (s) by Host",
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "barchart"
      },
      "customWidth": "50",
      "name": "UIDelayByHost",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MachineFilter = iff('{Machine}' == '*' or isempty('{Machine}'), '', '{Machine}');\nuberAgent_Application_UIDelay_CL\n| where isempty(MachineFilter) or Computer has MachineFilter\n| summarize SumUIDelayMs = sum(UIDelayMs_d) by User_s\n| extend SumUIDelayS = round(SumUIDelayMs / 1000.0, 1)\n| top 10 by SumUIDelayS desc",
        "size": 0,
        "title": "UI Delay (s) by User",
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "barchart"
      },
      "customWidth": "50",
      "name": "UIDelayByUser",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MachineFilter = iff('{Machine}' == '*' or isempty('{Machine}'), '', '{Machine}');\nuberAgent_Application_UIDelay_CL\n| where isempty(MachineFilter) or Computer has MachineFilter\n| summarize SumUIDelayMs = sum(UIDelayMs_d) by ProcessName_s\n| extend SumUIDelayS = round(SumUIDelayMs / 1000.0, 1)\n| top 10 by SumUIDelayS desc",
        "size": 0,
        "title": "UI Delay (s) by Process",
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "barchart"
      },
      "name": "UIDelayByApp"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let MachineFilter = iff('{Machine}' == '*' or isempty('{Machine}'), '', '{Machine}');\r\nlet UIDelays = \r\n    uberAgent_Application_UIDelay_CL\r\n    | where isempty(MachineFilter) or Computer has MachineFilter\r\n    | summarize\r\n        TotalUIDelayMs = sum(UIDelayMs_d),\r\n        UnresponsiveEventCount = count(),\r\n        FocusCount = countif(HasFocus_b == true),\r\n        UserCount = dcount(User_s),\r\n        HostCount = dcount(Computer)\r\n      by AppId_s, ProcessName_s;\r\n\r\nlet AppNames = \r\n    uberAgent_Application_AppNameIdMapping_CL\r\n    | summarize AppTitle = any(AppName_s) by AppId_s;\r\n\r\nUIDelays\r\n| join kind=leftouter (AppNames) on AppId_s\r\n| extend TotalUIDelaySeconds = round(TotalUIDelayMs / 1000.0, 1)\r\n| project\r\n    AppTitle,\r\n    ProcessName = ProcessName_s,\r\n    TotalUIDelaySeconds,\r\n    UnresponsiveEventCount,\r\n    FocusCount,\r\n    UserCount,\r\n    HostCount\r\n| order by TotalUIDelaySeconds desc\r\n\r\n",
        "size": 0,
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "gridSettings": {
          "sortBy": [
            {
              "itemKey": "TotalUIDelaySeconds",
              "sortOrder": 2
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "TotalUIDelaySeconds",
            "sortOrder": 2
          }
        ]
      },
      "name": "query - 5"
    }
  ],
  "defaultResourceIds": [
    "/subscriptions/<Azure-Subscription-ID>/resourceGroups/<Resource-Group-Name>/providers/Microsoft.OperationalInsights/workspaces/<LogAnalytics-Workspace-Name>"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
